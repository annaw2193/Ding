[{"/Users/Bonnielu/Desktop/Ding/frontend/src/index.js":"1","/Users/Bonnielu/Desktop/Ding/frontend/src/App.js":"2","/Users/Bonnielu/Desktop/Ding/frontend/src/reportWebVitals.js":"3","/Users/Bonnielu/Desktop/Ding/frontend/src/Input/InputTags.js":"4","/Users/Bonnielu/Desktop/Ding/frontend/src/Input/Input.js":"5","/Users/Bonnielu/Desktop/Ding/frontend/src/Input/Checkbox.js":"6"},{"size":500,"mtime":1610814305007,"results":"7","hashOfConfig":"8"},{"size":352,"mtime":1610814874901,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610771824996,"results":"10","hashOfConfig":"8"},{"size":1465,"mtime":1610814258200,"results":"11","hashOfConfig":"8"},{"size":3398,"mtime":1610817007779,"results":"12","hashOfConfig":"8"},{"size":456,"mtime":1610814288397,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xjz2gz",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Bonnielu/Desktop/Ding/frontend/src/index.js",[],["28","29"],"/Users/Bonnielu/Desktop/Ding/frontend/src/App.js",[],"/Users/Bonnielu/Desktop/Ding/frontend/src/reportWebVitals.js",[],"/Users/Bonnielu/Desktop/Ding/frontend/src/Input/InputTags.js",[],"/Users/Bonnielu/Desktop/Ding/frontend/src/Input/Input.js",["30","31"],"import React from 'react';\nimport Checkbox from './Checkbox.js'\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'\nimport Container from 'react-bootstrap/Container';\n\n\n\n\nconst OPTIONS = [\"Text\", \"Images\", \"Audio\"];\n\nclass Input extends React.Component {\n\n    state = {\n        checkboxes: OPTIONS.reduce(\n            (options, option) => ({\n                ...options,\n                [option]: false\n            })\n        ),\n\n        num: 1\n    }\n\n    // Handles changes in checkbox \n    handleCheckboxChange = changeEvent => {\n        const {name} = changeEvent.target;\n    \n        this.setState(prevState => ({\n            checkboxes: {\n                ...prevState.checkboxes,\n                [name]: !prevState.checkboxes[name]\n            }\n        }));\n    };\n\n    // Handles changes in number input \n    handleNumChange = e => {\n        this.setState({num: e.target.value});\n    };\n\n    // Dynamically creates checkboxes \n    createCheckbox = option => (\n        <Checkbox\n          label={option}\n          isSelected={this.state.checkboxes[option]}\n          onCheckboxChange={this.handleCheckboxChange}\n          key={option}\n        />\n      );\n    \n    //  Handles form submit events \n    handleFormSubmit = formSubmitEvent => {\n        formSubmitEvent.preventDefault();\n\n        let imageCheck = false; \n        let audioCheck = false; \n        let textCheck = false; \n    \n        Object.keys(this.state.checkboxes)\n          .filter(checkbox => this.state.checkboxes[checkbox])\n          .forEach(checkbox => {\n              if(checkbox === 'Images') {\n                  imageCheck = true;\n              }\n              if (checkbox === \"Audio\") {\n                  audioCheck = true;\n              }\n              if (checkbox === \"Text\") {\n                audioCheck = true;\n              }\n        });\n\n        let numImage = this.state.num; \n\n        console.log(this.state.num + ' page elements');\n\n        // Call backend for image information \n        if (imageCheck) {\n            axios.get(`localhost:5000/images/${numImage}`, {\n            }).then(function(response) {\n            console.log(response)\n            })\n        }\n        if (textCheck) {\n            axios.get(`localhost:5000/words/${numImage}`, {\n            }).then(function(response) {\n            console.log(response)\n            })\n        }\n    };\n\n    // Dynamically create checkboxes\n    createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n    render() {\n        return (\n            <div className=\"container\">\n            <div className=\"row mt-5\">\n                <div className=\"col-sm-12\">\n                <form onSubmit={this.handleFormSubmit}>\n                    <div className='checkboxBox'>\n                        {this.createCheckboxes()}\n                    </div>\n\n                    <label>\n                        Number of Page Elements\n                    </label>\n                    <input type='number' max='50' step='1' value={this.state.num} onChange={this.handleNumChange}></input>\n        \n                    <div className=\"form-group mt-2\">\n                    <Button type=\"submit\" className=\"btn generate\" size='lg' block>\n                        DING\n                    </Button>\n                    </div>\n                </form>\n                </div>\n            </div>\n            </div>\n        );\n    }\n};\n\nexport default Input;\n","/Users/Bonnielu/Desktop/Ding/frontend/src/Input/Checkbox.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":17},{"ruleId":"36","severity":1,"message":"40","line":70,"column":17,"nodeType":"38","messageId":"39","endLine":70,"endColumn":27},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'audioCheck' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]