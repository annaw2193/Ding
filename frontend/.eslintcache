[{"/home/annajwang/htn/Ding/frontend/src/index.js":"1","/home/annajwang/htn/Ding/frontend/src/App.js":"2","/home/annajwang/htn/Ding/frontend/src/reportWebVitals.js":"3","/home/annajwang/htn/Ding/frontend/src/Input/InputTags.js":"4","/home/annajwang/htn/Ding/frontend/src/Input/Input.js":"5","/home/annajwang/htn/Ding/frontend/src/Input/Checkbox.js":"6"},{"size":500,"mtime":1610772178555,"results":"7","hashOfConfig":"8"},{"size":688,"mtime":1610829765070,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610772178555,"results":"10","hashOfConfig":"8"},{"size":1548,"mtime":1610834285496,"results":"11","hashOfConfig":"8"},{"size":4856,"mtime":1610847312700,"results":"12","hashOfConfig":"8"},{"size":456,"mtime":1610829765074,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"wucgfi",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/annajwang/htn/Ding/frontend/src/index.js",[],["28","29"],"/home/annajwang/htn/Ding/frontend/src/App.js",[],"/home/annajwang/htn/Ding/frontend/src/reportWebVitals.js",[],"/home/annajwang/htn/Ding/frontend/src/Input/InputTags.js",[],"/home/annajwang/htn/Ding/frontend/src/Input/Input.js",["30"],"import React from \"react\";\nimport Checkbox from \"./Checkbox.js\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/Container\";\n\nconst OPTIONS = [\"Text\", \"Images\", \"Audio\"];\n\nclass Input extends React.Component {\n  state = {\n    checkboxes: OPTIONS.reduce((options, option) => ({\n      ...options,\n      [option]: false,\n    })),\n\n    num: 1,\n\n    downloads: [],\n\n    words: [],\n\n    audios: [],\n  };\n\n  // Handles changes in checkbox\n  handleCheckboxChange = (changeEvent) => {\n    const { name } = changeEvent.target;\n\n    this.setState((prevState) => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name],\n      },\n    }));\n  };\n\n  // Handles changes in number input\n  handleNumChange = (e) => {\n    this.setState({ num: e.target.value });\n  };\n\n  // Dynamically creates checkboxes\n  createCheckbox = (option) => (\n    <Checkbox\n      label={option}\n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option}\n    />\n  );\n\n  //  Handles form submit events\n  handleFormSubmit = (formSubmitEvent) => {\n    formSubmitEvent.preventDefault();\n\n    let imageCheck = false;\n    let audioCheck = false;\n    let textCheck = false;\n\n    let numImage = 0;\n    let numAudio = 0;\n    let numText = 0;\n\n    const audio = new Audio(\"/ding.mp3\");\n    audio.play();\n\n    Object.keys(this.state.checkboxes)\n      .filter((checkbox) => this.state.checkboxes[checkbox])\n      .forEach((checkbox) => {\n        if (checkbox === \"Images\") {\n          imageCheck = true;\n          numImage = Math.floor(Math.random() * this.state.num + 1);\n        }\n        if (checkbox === \"Audio\") {\n          audioCheck = true;\n          numAudio = Math.floor(\n            Math.random() * (this.state.num - numImage) + 1\n          );\n          console.log(numAudio);\n        }\n        if (checkbox === \"Text\") {\n          textCheck = true;\n          numText = this.state.num - numImage - numAudio;\n        }\n      });\n\n    // Call backend for image, word, and text information\n    if (imageCheck) {\n      axios.get(`http://localhost:5000/images/${numImage}`, {}).then(\n        function (response) {\n          var download = [];\n          for (let i = 0; i < numImage; i++) {\n            download.push(JSON.parse(response[\"data\"])[i][\"download_url\"]);\n          }\n          return this.setState({ downloads: download });\n        }.bind(this)\n      );\n    }\n    if (textCheck) {\n      axios.get(`http://localhost:5000/words/${numText}`, {}).then(\n        function (response) {\n          var wordArray = response[\"data\"];\n          return this.setState({ words: wordArray });\n        }.bind(this)\n      );\n    }\n    if (audioCheck) {\n      axios.get(`http://localhost:5000/audio/${numAudio}`, {}).then(\n        function (response) {\n          var audioLink = [];\n          for (let i = 0; i < numAudio; i++) {\n            audioLink.push(JSON.parse(response[\"data\"])[i][\"preview-lq-mp3\"]);\n          }\n          return this.setState({ audios: audioLink });\n        }.bind(this)\n      );\n    }\n  };\n  // Dynamically create checkboxes\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n          <div className=\"col-sm-12\">\n            <form onSubmit={this.handleFormSubmit}>\n              <div className=\"checkboxBox\">{this.createCheckboxes()}</div>\n\n              <label>\n                Number of Page Elements{\" \"}\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"50\"\n                  step=\"1\"\n                  value={this.state.num}\n                  onChange={this.handleNumChange}\n                ></input>\n              </label>\n\n              <div className=\"form-group mt-2\">\n                <Button type=\"submit\" className=\"btn generate\" size=\"lg\" block>\n                  DING\n                </Button>\n                {this.state.downloads.map((image, i) => (\n                  <div key={i}>\n                    <img src={image} alt=\"DingImage\"></img>\n                  </div>\n                ))}\n                {this.state.words.map((word, i) => (\n                  <div key={i}>\n                    <p>{word}</p>\n                  </div>\n                ))}\n                {this.state.audios.map((audioLink, i) => (\n                  <div key={i}>\n                    <audio controls>\n                      <source src={audioLink} type=\"audio/mp3\"></source>\n                    </audio>\n                  </div>\n                ))}\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Dynamically create checkboxes\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n}\n\nexport default Input;\n","/home/annajwang/htn/Ding/frontend/src/Input/Checkbox.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":5,"column":8,"nodeType":"37","messageId":"38","endLine":5,"endColumn":17},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]