[{"/Users/Bonnielu/Desktop/Ding/frontend/src/index.js":"1","/Users/Bonnielu/Desktop/Ding/frontend/src/reportWebVitals.js":"2","/Users/Bonnielu/Desktop/Ding/frontend/src/App.js":"3","/Users/Bonnielu/Desktop/Ding/frontend/src/Input/Input.js":"4","/Users/Bonnielu/Desktop/Ding/frontend/src/Input/Checkbox.js":"5","/Users/Bonnielu/Desktop/Ding/frontend/src/Input/InputTags.js":"6"},{"size":500,"mtime":1610814305007,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610771824996,"results":"9","hashOfConfig":"8"},{"size":622,"mtime":1610823509709,"results":"10","hashOfConfig":"8"},{"size":3848,"mtime":1610828611497,"results":"11","hashOfConfig":"8"},{"size":456,"mtime":1610814288397,"results":"12","hashOfConfig":"8"},{"size":1465,"mtime":1610814258200,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xjz2gz",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/Bonnielu/Desktop/Ding/frontend/src/index.js",[],["29","30"],"/Users/Bonnielu/Desktop/Ding/frontend/src/reportWebVitals.js",[],"/Users/Bonnielu/Desktop/Ding/frontend/src/App.js",[],"/Users/Bonnielu/Desktop/Ding/frontend/src/Input/Input.js",["31","32","33","34"],"import React from 'react';\nimport Checkbox from './Checkbox.js'\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'\nimport Container from 'react-bootstrap/Container';\n\n\n\nconst OPTIONS = [\"Text\", \"Images\", \"Audio\"];\n\nclass Input extends React.Component {\n\n    state = {\n        checkboxes: OPTIONS.reduce(\n            (options, option) => ({\n                ...options,\n                [option]: false\n            })\n        ),\n\n        num: 1\n    }\n\n    // Handles changes in checkbox \n    handleCheckboxChange = changeEvent => {\n        const {name} = changeEvent.target;\n    \n        this.setState(prevState => ({\n            checkboxes: {\n                ...prevState.checkboxes,\n                [name]: !prevState.checkboxes[name]\n            }\n        }));\n    };\n\n    // Handles changes in number input \n    handleNumChange = e => {\n        this.setState({num: e.target.value});\n    };\n\n    // Dynamically creates checkboxes \n    createCheckbox = option => (\n        <Checkbox\n          label={option}\n          isSelected={this.state.checkboxes[option]}\n          onCheckboxChange={this.handleCheckboxChange}\n          key={option}\n        />\n      );\n    \n    //  Handles form submit events \n    handleFormSubmit = formSubmitEvent => {\n        formSubmitEvent.preventDefault();\n\n        let imageCheck = false; \n        let audioCheck = false; \n        let textCheck = false; \n\n        let numImage = 0;\n        let numAudio = 0;\n        let numText = 0;\n        \n    \n        Object.keys(this.state.checkboxes)\n          .filter(checkbox => this.state.checkboxes[checkbox])\n          .forEach(checkbox => {\n              if(checkbox === 'Images') {\n                  imageCheck = true;\n                  numImage = Math.floor((Math.random()*this.state.num)) + 1;\n                  console.log(numImage);\n              }\n              if (checkbox === \"Audio\") {\n                  audioCheck = true;\n                  numAudio = Math.floor(Math.random() * (this.state.num-numImage));\n                  console.log(numAudio);\n              }\n              if (checkbox === \"Text\") {\n                  textCheck = true;\n                  numText = this.state.num - numImage - numAudio;\n              }\n            });\n\n            // Call backend for image, word, and text information \n            if (imageCheck) {\n                axios.get(`http://localhost:5000/images/${this.state.num}`, {\n                }).then(function(response) {\n                    let download = JSON.parse(response['data'])[0]['download_url']\n                })\n            }\n            if (textCheck) {\n                axios.get(`http://localhost:5000/words/${numText}`, {\n                }).then(function(response) {\n                    let wordArray = response['data'];\n                })\n            }\n    };\n\n    // Dynamically create checkboxes\n    createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n    render() {\n        return (\n            <div className=\"container\">\n            <div className=\"row mt-5\">\n                <div className=\"col-sm-12\">\n                <form onSubmit={this.handleFormSubmit}>\n                    <div className='checkboxBox'>\n                        {this.createCheckboxes()}\n                    </div>\n\n                    <label>\n                        Number of Page Elements\n                    </label>\n                    <input type='number' max='50' step='1' value={this.state.num} onChange={this.handleNumChange}></input>\n        \n                    <div className=\"form-group mt-2\">\n                    <Button type=\"submit\" className=\"btn generate\" size='lg' block>\n                        DING\n                    </Button>\n                    </div>\n                </form>\n                </div>\n            </div>\n            </div>\n        );\n    }\n};\n\nexport default Input;\n","/Users/Bonnielu/Desktop/Ding/frontend/src/Input/Checkbox.js",[],["35","36"],"/Users/Bonnielu/Desktop/Ding/frontend/src/Input/InputTags.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":17},{"ruleId":"41","severity":1,"message":"45","line":73,"column":19,"nodeType":"43","messageId":"44","endLine":73,"endColumn":29},{"ruleId":"41","severity":1,"message":"46","line":87,"column":25,"nodeType":"43","messageId":"44","endLine":87,"endColumn":33},{"ruleId":"41","severity":1,"message":"47","line":93,"column":25,"nodeType":"43","messageId":"44","endLine":93,"endColumn":34},{"ruleId":"37","replacedBy":"48"},{"ruleId":"39","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'audioCheck' is assigned a value but never used.","'download' is assigned a value but never used.","'wordArray' is assigned a value but never used.",["50"],["51"],"no-global-assign","no-unsafe-negation"]